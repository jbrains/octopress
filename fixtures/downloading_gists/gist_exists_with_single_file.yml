---
http_interactions:
- request:
    method: get
    uri: https://gist.github.com/jbrains/4111662/raw/TestingIoFailure.java
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.8.8
  response:
    status:
      code: 200
      message: 
    headers:
      server:
      - GitHub.com
      date:
      - Sat, 16 Nov 2013 20:00:02 GMT
      content-type:
      - text/plain; charset=utf-8
      transfer-encoding:
      - chunked
      connection:
      - close
      status:
      - 200 OK
      strict-transport-security:
      - max-age=31536000
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      x-content-type-options:
      - nosniff
      x-ua-compatible:
      - chrome=1
      access-control-allow-origin:
      - https://render.github.com
      etag:
      - '"93491d36f2231f211142b9006f573e20"'
      content-disposition:
      - inline
      content-transfer-encoding:
      - binary
      x-served-by:
      - github-fe103-cp1-prd.iad.github.net
      cache-control:
      - private
      x-request-id:
      - 69a21d6b-9bcb-4436-9893-45de7d5eb162
      x-runtime:
      - '0.048882'
      vary:
      - Accept-Encoding
    body:
      encoding: UTF-8
      string: |
        @Test
        public void ioFailure() throws Exception {
            final IOException ioFailure = new IOException("Simulating a failure writing to the file.");
            try {
                new WriteTextToFileActionImpl() {
                    @Override
                    protected FileWriter fileWriterOn(File path) throws IOException {
                        return new FileWriter(path) {
                            @Override
                            public void write(String str, int off, int len) throws IOException {
                                throw ioFailure;
                            }
                        };
                    }
                }.writeTextToFile("::text::", new File("anyWritableFile.txt"));
                fail("How did you survive the I/O failure?!");
            } catch (IOException success) {
                if (success != ioFailure)
                    throw success;
            }
        }
    http_version: 
  recorded_at: Sat, 16 Nov 2013 20:00:02 GMT
- request:
    method: get
    uri: https://gist.github.com/jbrains/4111662/raw/TestingIoFailure.java
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.8.8
  response:
    status:
      code: 200
      message: 
    headers:
      server:
      - GitHub.com
      date:
      - Sat, 16 Nov 2013 20:00:03 GMT
      content-type:
      - text/plain; charset=utf-8
      transfer-encoding:
      - chunked
      connection:
      - close
      status:
      - 200 OK
      strict-transport-security:
      - max-age=31536000
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      x-content-type-options:
      - nosniff
      x-ua-compatible:
      - chrome=1
      access-control-allow-origin:
      - https://render.github.com
      etag:
      - '"93491d36f2231f211142b9006f573e20"'
      content-disposition:
      - inline
      content-transfer-encoding:
      - binary
      x-served-by:
      - github-fe103-cp1-prd.iad.github.net
      cache-control:
      - private
      x-request-id:
      - b8e95b12-4b9e-4461-b3da-0e1fca216ec1
      x-runtime:
      - '0.049170'
      vary:
      - Accept-Encoding
    body:
      encoding: UTF-8
      string: |
        @Test
        public void ioFailure() throws Exception {
            final IOException ioFailure = new IOException("Simulating a failure writing to the file.");
            try {
                new WriteTextToFileActionImpl() {
                    @Override
                    protected FileWriter fileWriterOn(File path) throws IOException {
                        return new FileWriter(path) {
                            @Override
                            public void write(String str, int off, int len) throws IOException {
                                throw ioFailure;
                            }
                        };
                    }
                }.writeTextToFile("::text::", new File("anyWritableFile.txt"));
                fail("How did you survive the I/O failure?!");
            } catch (IOException success) {
                if (success != ioFailure)
                    throw success;
            }
        }
    http_version: 
  recorded_at: Sat, 16 Nov 2013 20:00:03 GMT
recorded_with: VCR 2.7.0
